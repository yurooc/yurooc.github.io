[{"content":"Git 1.基本配置 1.1 设置用户信息\ngit config --global user.name \u0026#34;yurooc\u0026#34;\rgit config --global user.email \u0026#34;yurooc@163.com\u0026#34; 1.2 查看用户信息\ngit config --global user.name\rgit config --global user.eamil 2.获取本地仓库 创建一个空文件夹 cd进入文件夹中执行git init命令 本地仓库就创建成功了 2.1 基础操作命令 2.1.1\ngit add\t(工作区\u0026ndash;\u0026gt;暂存区) git commit (暂存区\u0026ndash;\u0026gt;本地仓库) 2.1.2 查看修改的状态(status)\n作用：查看修改的状态（暂存区、工作区） 命令：git status 2.1.3 添加工作区到暂存区（add）\ngit add 单个文件名|.可以添加单个文件名也可以用.表示所有文件\n2.1.4 提交暂存区到本地仓库(commit)\n将暂存区内容提交到本地仓库的当前分支\ngit commit -m \u0026quot;注释内容\u0026quot;\n2.1.5 查看提交日志(log)\n查看谁在什么时间修改或者提交了哪些文件\ngit log 或者git log [option]\n[option]:\n--all 显示所有分支 --pretty=oneline 将提交信息显示为一行 --abbrev-commit 使得输出的commit更简短 --graph 以图的形式显示 2.1.6 版本回退\n作用：切换版本\n命令：git reset --hard [commitID]\ncommitID可以用git log查看\n如何查看已经删除的记录：\ngit reflog\n这个指令可以看到已经删除的提交记录\n2.1.7 添加文件至忽略列表\n有些文件不需要git管理的时候，就可以在工作区创建一个.gitignore文件，在里面列出来要忽略的文件的格式\n3.分支 3.1 查看本地分支\ngit branch\n3.2 创建本地分支\ngit branch 分支名\n3.3 切换分支(checkout)\ngit checkout 分支名\n我们还可以直接切换到一个不存在的分支(创建并切换)：\ngit cheackout -b 分支名\n3.4 合并分支(merge)\n一个分支上的提交可以合并到另一个分支\ngit merge 分支名称\n3.5 删除分支\n不能删除当前分支，只能删除其他分支\ngit branch -d b1 删除分支时，需要做各种检查\ngit branch -D b1不做任何检查，强制删除\n4.操作远程仓库 4.1 添加远程仓库\n此操作是与远程库进行链接\ngit remote add \u0026lt;远端名称\u0026gt; \u0026lt;仓库路径\u0026gt;\n远端名称：默认为origin，取决于远端服务器设置 仓库路径：从远端服务器获取url 4.2 查看远程仓库\ngit remote\n4.3 推送到远程仓库\ngit push [-f][--set-upstream][远端名称[本地分支名][:远端分支名]]\n如果远程分支名和本地分支名称相同，则可以只写本地分支 git push origin main --set-upstream推送到远端的同时并且建立起和远端分支的关联联系 git push --set-upstream origin main 如果当前分支已经和远端分支关联，则可以省略分支名和远端名 git push 将main分支推送到已关联的远端分支 4.4 查看本地分支和远程分支的关联关系\ngit branch -vv\n4.5 从远程仓库克隆\ngit clon \u0026lt;仓库路径url\u0026gt;[本地目录]\n本地目录可以省略，会自动生成一个目录\n4.6 从远程仓库中抓取和拉取\n远程分支和本地的分支一样，我们可以进行merge操作，只是需要先把远端仓库里的更新都下载到本地，再进行操作。\n抓取命令：git fetch [remote name][branch name]\tremote name 一般指origin 抓取指令就是将仓库里的更新都抓取到本地，不会进行合并 如果不指定远端名称和分支名，则抓取所有分支。 拉取命令：git pull [remote name][branch name] remote name 一般指origin 拉取命令就是将远端仓库的修改拉到本地并自动进行合并，等同于fetch+merge 如果不指定远端名称和分支名，则抓取所有并更新当前分支 ","permalink":"https://yurooc.github.io/blog/git/","summary":"Git 1.基本配置 1.1 设置用户信息 git config --global user.name \u0026#34;yurooc\u0026#34; git config --global user.email \u0026#34;yurooc@163.com\u0026#34; 1.2 查看用户信息 git config --global user.name git config --global user.eamil 2.获取本地仓库 创建一个空文件夹 cd进入文件夹中执行git in","title":"Git基本命令"},{"content":"","permalink":"https://yurooc.github.io/about/","summary":"","title":"Hello"},{"content":"一.Hugo中添加不蒜子计数 Hugo添加不蒜子页面浏览次数与阅读数据统计\n什么是不蒜子？\nBusuanzi是一个用于统计网站访问量的工具。它通常嵌入到网页中，可以追踪页面的浏览次数，方可数量积极其他一些基本的访问数据。这个工具可以帮助网站管理员了解他们的网站受欢迎程度和流量情况。\n使用步骤\n在head.html，footer.html，single.html，config.yml进行修改\n1.head.html\n我的papermod的路径为themes/PaperMod/layouts/partials/head.html\n添加以下代码\n\u0026lt;!-- busuanzi --\u0026gt; {{- if .Site.Params.busuanzi.enable -}} \u0026lt;script async src=\u0026#34;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;meta name=\u0026#34;referrer\u0026#34; content=\u0026#34;no-referrer-when-downgrade\u0026#34;\u0026gt; {{- end -}} 2.footer.html\n用于在站点底部显示总访问量与访客数\n我的PaperMod路径为themes/PaperMod/layouts/partials/footer.html\n添加以下代码，注意添加在\u0026lt;footer\u0026gt;代码块里\n\u0026lt;!-- busuanzi --\u0026gt; {{ if .Site.Params.busuanzi.enable -}} \u0026lt;div class=\u0026#34;busuanzi-footer\u0026#34;\u0026gt; \u0026lt;span id=\u0026#34;busuanzi_container_site_pv\u0026#34;\u0026gt; 本站总访问量\u0026lt;span id=\u0026#34;busuanzi_value_site_pv\u0026#34;\u0026gt;\u0026lt;/span\u0026gt;次 \u0026lt;/span\u0026gt; \u0026lt;span id=\u0026#34;busuanzi_container_site_uv\u0026#34;\u0026gt; 本站访客数\u0026lt;span id=\u0026#34;busuanzi_value_site_uv\u0026#34;\u0026gt;\u0026lt;/span\u0026gt;人次 \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; {{- end -}} 3.single.html\n用于显示每篇文章阅读量\n我的papermod路径为themes/PaperMod/layouts/_default/single.html\n添加以下代码，加在\u0026lt;header\u0026gt;代码块内\n\u0026lt;!-- busuanzi --\u0026gt; {{ if .Site.Params.busuanzi.enable -}} \u0026lt;div class=\u0026#34;meta-item\u0026#34;\u0026gt;\u0026amp;nbsp·\u0026amp;nbsp \u0026lt;span id=\u0026#34;busuanzi_container_page_pv\u0026#34;\u0026gt;本文阅读量\u0026lt;span id=\u0026#34;busuanzi_value_page_pv\u0026#34;\u0026gt;\u0026lt;/span\u0026gt;次\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; {{- end }} 4.config.yml\n回到根目录的config.yml，在params里加上busuanzi:功能\n显示统计即为true\nparams: busuanzi: enable: true 二.搜索功能 分别在中英文的文件夹下创建search.md（hugo new search.md），修改文件头为：\ntitle: \u0026#34;Search\u0026#34; date: ... draft: false layout: search config.yml中添加：\nmenu: main: -identifier: Search name: Search url: search weight: ... 三.目录栏放在左侧 1.首先找到目录 layouts/partials/toc.html，把之前的代码换成如下代码\n{{- $headers := findRE \u0026#34;\u0026lt;h[1-6].*?\u0026gt;(.|\\n])+?\u0026lt;/h[1-6]\u0026gt;\u0026#34; .Content -}} {{- $has_headers := ge (len $headers) 1 -}} {{- if $has_headers -}} \u0026lt;aside id=\u0026#34;toc-container\u0026#34; class=\u0026#34;toc-container wide\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;toc\u0026#34;\u0026gt; \u0026lt;details {{if (.Param \u0026#34;TocOpen\u0026#34;) }} open{{ end }}\u0026gt; \u0026lt;summary accesskey=\u0026#34;c\u0026#34; title=\u0026#34;(Alt + C)\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;details\u0026#34;\u0026gt;{{- i18n \u0026#34;toc\u0026#34; | default \u0026#34;Table of Contents\u0026#34; }}\u0026lt;/span\u0026gt; \u0026lt;/summary\u0026gt; \u0026lt;div class=\u0026#34;inner\u0026#34;\u0026gt; {{- $largest := 6 -}} {{- range $headers -}} {{- $headerLevel := index (findRE \u0026#34;[1-6]\u0026#34; . 1) 0 -}} {{- $headerLevel := len (seq $headerLevel) -}} {{- if lt $headerLevel $largest -}} {{- $largest = $headerLevel -}} {{- end -}} {{- end -}} {{- $firstHeaderLevel := len (seq (index (findRE \u0026#34;[1-6]\u0026#34; (index $headers 0) 1) 0)) -}} {{- $.Scratch.Set \u0026#34;bareul\u0026#34; slice -}} \u0026lt;ul\u0026gt; {{- range seq (sub $firstHeaderLevel $largest) -}} \u0026lt;ul\u0026gt; {{- $.Scratch.Add \u0026#34;bareul\u0026#34; (sub (add $largest .) 1) -}} {{- end -}} {{- range $i, $header := $headers -}} {{- $headerLevel := index (findRE \u0026#34;[1-6]\u0026#34; . 1) 0 -}} {{- $headerLevel := len (seq $headerLevel) -}} {{/* get id=\u0026#34;xyz\u0026#34; */}} {{- $id := index (findRE \u0026#34;(id=\\\u0026#34;(.*?)\\\u0026#34;)\u0026#34; $header 9) 0 }} {{- /* strip id=\u0026#34;\u0026#34; to leave xyz, no way to get regex capturing groups in hugo */ -}} {{- $cleanedID := replace (replace $id \u0026#34;id=\\\u0026#34;\u0026#34; \u0026#34;\u0026#34;) \u0026#34;\\\u0026#34;\u0026#34; \u0026#34;\u0026#34; }} {{- $header := replaceRE \u0026#34;\u0026lt;h[1-6].*?\u0026gt;((.|\\n])+?)\u0026lt;/h[1-6]\u0026gt;\u0026#34; \u0026#34;$1\u0026#34; $header -}} {{- if ne $i 0 -}} {{- $prevHeaderLevel := index (findRE \u0026#34;[1-6]\u0026#34; (index $headers (sub $i 1)) 1) 0 -}} {{- $prevHeaderLevel := len (seq $prevHeaderLevel) -}} {{- if gt $headerLevel $prevHeaderLevel -}} {{- range seq $prevHeaderLevel (sub $headerLevel 1) -}} \u0026lt;ul\u0026gt; {{/* the first should not be recorded */}} {{- if ne $prevHeaderLevel . -}} {{- $.Scratch.Add \u0026#34;bareul\u0026#34; . -}} {{- end -}} {{- end -}} {{- else -}} \u0026lt;/li\u0026gt; {{- if lt $headerLevel $prevHeaderLevel -}} {{- range seq (sub $prevHeaderLevel 1) -1 $headerLevel -}} {{- if in ($.Scratch.Get \u0026#34;bareul\u0026#34;) . -}} \u0026lt;/ul\u0026gt; {{/* manually do pop item */}} {{- $tmp := $.Scratch.Get \u0026#34;bareul\u0026#34; -}} {{- $.Scratch.Delete \u0026#34;bareul\u0026#34; -}} {{- $.Scratch.Set \u0026#34;bareul\u0026#34; slice}} {{- range seq (sub (len $tmp) 1) -}} {{- $.Scratch.Add \u0026#34;bareul\u0026#34; (index $tmp (sub . 1)) -}} {{- end -}} {{- else -}} \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; {{- end -}} {{- end -}} {{- end -}} {{- end }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#{{- $cleanedID -}}\u0026#34; aria-label=\u0026#34;{{- $header | plainify -}}\u0026#34;\u0026gt;{{- $header | safeHTML -}}\u0026lt;/a\u0026gt; {{- else }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#{{- $cleanedID -}}\u0026#34; aria-label=\u0026#34;{{- $header | plainify -}}\u0026#34;\u0026gt;{{- $header | safeHTML -}}\u0026lt;/a\u0026gt; {{- end -}} {{- end -}} \u0026lt;!-- {{- $firstHeaderLevel := len (seq (index (findRE \u0026#34;[1-6]\u0026#34; (index $headers 0) 1) 0)) -}} --\u0026gt; {{- $firstHeaderLevel := $largest }} {{- $lastHeaderLevel := len (seq (index (findRE \u0026#34;[1-6]\u0026#34; (index $headers (sub (len $headers) 1)) 1) 0)) }} \u0026lt;/li\u0026gt; {{- range seq (sub $lastHeaderLevel $firstHeaderLevel) -}} {{- if in ($.Scratch.Get \u0026#34;bareul\u0026#34;) (add . $firstHeaderLevel) }} \u0026lt;/ul\u0026gt; {{- else }} \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; {{- end -}} {{- end }} \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/details\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/aside\u0026gt; \u0026lt;script\u0026gt; let activeElement; let elements; window.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, function (event) { checkTocPosition(); elements = document.querySelectorAll(\u0026#39;h1[id],h2[id],h3[id],h4[id],h5[id],h6[id]\u0026#39;); // Make the first header active activeElement = elements[0]; const id = encodeURI(activeElement.getAttribute(\u0026#39;id\u0026#39;)).toLowerCase(); document.querySelector(`.inner ul li a[href=\u0026#34;#${id}\u0026#34;]`).classList.add(\u0026#39;active\u0026#39;); }, false); window.addEventListener(\u0026#39;resize\u0026#39;, function(event) { checkTocPosition(); }, false); window.addEventListener(\u0026#39;scroll\u0026#39;, () =\u0026gt; { // Check if there is an object in the top half of the screen or keep the last item active activeElement = Array.from(elements).find((element) =\u0026gt; { if ((getOffsetTop(element) - window.pageYOffset) \u0026gt; 0 \u0026amp;\u0026amp; (getOffsetTop(element) - window.pageYOffset) \u0026lt; window.innerHeight/2) { return element; } }) || activeElement elements.forEach(element =\u0026gt; { const id = encodeURI(element.getAttribute(\u0026#39;id\u0026#39;)).toLowerCase(); if (element === activeElement){ document.querySelector(`.inner ul li a[href=\u0026#34;#${id}\u0026#34;]`).classList.add(\u0026#39;active\u0026#39;); } else { document.querySelector(`.inner ul li a[href=\u0026#34;#${id}\u0026#34;]`).classList.remove(\u0026#39;active\u0026#39;); } }) }, false); const main = parseInt(getComputedStyle(document.body).getPropertyValue(\u0026#39;--article-width\u0026#39;), 10); const toc = parseInt(getComputedStyle(document.body).getPropertyValue(\u0026#39;--toc-width\u0026#39;), 10); const gap = parseInt(getComputedStyle(document.body).getPropertyValue(\u0026#39;--gap\u0026#39;), 10); function checkTocPosition() { const width = document.body.scrollWidth; if (width - main - (toc * 2) - (gap * 4) \u0026gt; 0) { document.getElementById(\u0026#34;toc-container\u0026#34;).classList.add(\u0026#34;wide\u0026#34;); } else { document.getElementById(\u0026#34;toc-container\u0026#34;).classList.remove(\u0026#34;wide\u0026#34;); } } function getOffsetTop(element) { if (!element.getClientRects().length) { return 0; } let rect = element.getBoundingClientRect(); let win = element.ownerDocument.defaultView; return rect.top + win.pageYOffset; } \u0026lt;/script\u0026gt; {{- end }} 2.找到目录 layouts/_default/single.html，调用toc.html，注意：这里默认是有调用的\n{{- if (.Param \u0026#34;ShowToc\u0026#34;) }} {{- partial \u0026#34;toc.html\u0026#34; . }} {{- end }} 3.修改css，找到目录 css/extended/blank.css ，复制如下代码\n:root { --nav-width: 1380px; --article-width: 650px; --toc-width: 300px; } .toc { margin: 0 2px 40px 2px; border: 1px solid var(--border); background: var(--entry); border-radius: var(--radius); padding: 0.4em; } .toc-container.wide { position: absolute; height: 100%; border-right: 1px solid var(--border); left: calc((var(--toc-width) + var(--gap)) * -1); top: calc(var(--gap) * 2); width: var(--toc-width); } .wide .toc { position: sticky; top: var(--gap); border: unset; background: unset; border-radius: unset; width: 100%; margin: 0 2px 40px 2px; } .toc details summary { cursor: zoom-in; margin-inline-start: 20px; padding: 12px 0; } .toc details[open] summary { font-weight: 500; } .toc-container.wide .toc .inner { margin: 0; } .active { font-size: 110%; font-weight: 600; } .toc ul { list-style-type: circle; } .toc .inner { margin: 0 0 0 20px; padding: 0px 15px 15px 20px; font-size: 16px; /*目录显示高度*/ max-height: 83vh; overflow-y: auto; } .toc .inner::-webkit-scrollbar-thumb { /*滚动条*/ background: var(--border); border: 7px solid var(--theme); border-radius: var(--radius); } .toc li ul { margin-inline-start: calc(var(--gap) * 0.5); list-style-type: none; } .toc li { list-style: none; font-size: 0.95rem; padding-bottom: 5px; } .toc li a:hover { color: var(--secondary); } 四.Git部署到Github 第一次部署到Github需要在yurooc目录下执行hugo命令生成public文件\ncd进入public文件之后，执行以下命令\ngit init #初始化仓库 git remote add origin https://github.com/yurooc/yurooc.github.io.git #链接远程仓库 git add . git commit -m \u0026#34;first commit\u0026#34; git branch -m master main #因为github远程仓库默认分支修改为main，而git本地分支为master，这里将本地分支master修改为main git push -f origin main\t#-f是全部覆盖，生产环境慎用此命令 在此之后更新文章，使用hugo生成新的静态页面，并使用git push进行同步 cd public git add . git status git commit -m \u0026#34;add blog post\u0026#34; git push -f origin main 五.域名解析，自定义域名 在华为云购买一个自己喜欢的域名，完成步骤之后在域名解析中修改记录集 主机记录：yurooc.top\n类型：CNAME\n值：yurooc.github.io\n然后到GitHub中的setting中找到Pages一栏，在Custom domain界面中填写自己的域名www.yurooc.top然后点击Save提交，等待几分钟后勾选Enforce HTTPS ","permalink":"https://yurooc.github.io/blog/hugo%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/","summary":"一.Hugo中添加不蒜子计数 Hugo添加不蒜子页面浏览次数与阅读数据统计 什么是不蒜子？ Busuanzi是一个用于统计网站访问量的工具。它通常","title":"Hugo安装配置"},{"content":"Python基础库和三方库用法 1.Pandas 强大的数据分析工具\n用于数据分析，数据处理，数据可视化\n高性能 容易使用的数据结构 容易使用的数据分析工具 1.1Pandas数据读取 Pandas需要先读取表格类型的数据，然后进行分析\n2.Numpy 3.OS ","permalink":"https://yurooc.github.io/blog/python%E5%9F%BA%E7%A1%80%E5%BA%93%E5%92%8C%E4%B8%89%E6%96%B9%E5%BA%93%E7%94%A8%E6%B3%95/","summary":"Python基础库和三方库用法 1.Pandas 强大的数据分析工具 用于数据分析，数据处理，数据可视化 高性能 容易使用的数据结构 容易使用的数据分析工具 1.1Pa","title":""}]